version: '{build}'
configuration: Release
platform: x64
image:
- Visual Studio 2017
environment:
  matrix:
  - NAME: cuda91
install:
- cmd: set "CUDA_PATH=C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1"
- cmd: IF NOT EXIST "%CUDA_PATH%" appveyor DownloadFile https://developer.nvidia.com/compute/cuda/9.1/Prod/network_installers/cuda_9.1.85_win10_network
- cmd: IF NOT EXIST "%CUDA_PATH%" cuda_9.1.85_win10_network -s nvcc_9.1 cublas_dev_9.1 cublas_9.1 cudart_9.1
- cmd: set PATH=%CUDA_PATH%\bin;%PATH%
- cmd: IF NOT EXIST C:\cache\cuda appveyor DownloadFile http://developer.download.nvidia.com/compute/redist/cudnn/v7.1.2/cudnn-9.1-windows10-x64-v7.1.zip
- cmd: IF NOT EXIST C:\cache\cuda 7z x cudnn-9.1-windows10-x64-v7.1.zip -oC:\cache
- cmd: set PATH=C:\Python36;C:\Python36\scripts;%PATH%
- cmd: pip3 install --upgrade meson
- cmd: call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64
- cmd: set PKG_FOLDER="C:\cache"
- cmd: IF NOT EXIST c:\cache\protobuf\ git clone -b v3.5.1 --single-branch --depth 1 https://github.com/google/protobuf.git
- cmd: IF NOT EXIST c:\cache\protobuf\ mkdir protobuf\build_msvc
- cmd: IF NOT EXIST c:\cache\protobuf\ cd protobuf\build_msvc
- cmd: IF NOT EXIST c:\cache\protobuf\ cmake -G "Visual Studio 14 2015 Win64" -Dprotobuf_BUILD_SHARED_LIBS=NO -Dprotobuf_MSVC_STATIC_RUNTIME=NO -Dprotobuf_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=c:/cache/protobuf ../cmake
- cmd: IF NOT EXIST c:\cache\protobuf\ msbuild INSTALL.vcxproj /p:Configuration=Release /p:Platform=x64 /m
- cmd: set PATH=c:\cache\protobuf\bin;%PATH%
- cmd: cd C:\projects\lc0
cache:
  - C:\cache
  - 'C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.1'
  - C:\projects\lc0\subprojects\packagecache
before_build:
- cmd: git submodule update --init --recursive
- cmd: meson.py build --backend vs2015 --buildtype release -Dgtest=false -Dopencl=false -Dblas=false -Dcudnn=true -Dcudnn_include="%PKG_FOLDER%\cuda\include" -Dcudnn_libdirs="%CUDA_PATH%\lib\x64","%PKG_FOLDER%\cuda\lib\x64" -Dprotobuf_include="%PKG_FOLDER%\protobuf\include" -Dprotobuf_libdir="%PKG_FOLDER%\protobuf\lib" -Ddefault_library=static
build_script:
- cmd: msbuild "C:\projects\lc0\build\lc0.sln" /m /p:WholeProgramOptimization=true /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
after_build:
- cmd: 7z a lc0-windows-%NAME%.zip %APPVEYOR_BUILD_FOLDER%\build\lc0.exe
- cmd: 7z a lc0-windows-%NAME%.zip "%CUDA_PATH%\bin\cudart64_91.dll" "%CUDA_PATH%\bin\cublas64_91.dll"
- cmd: 7z a lc0-windows-%NAME%.zip "%PKG_FOLDER%\cuda\bin\cudnn64_7.dll"
- cmd: type COPYING |more /P > dist\COPYING
- cmd: copy "%CUDA_PATH%\EULA.txt" dist\CUDA.txt
- cmd: copy "%PKG_FOLDER%\cuda\NVIDIA_SLA_cuDNN_Support.txt" dist\CUDNN.txt
- cmd: type dist\README-cuda.txt |more /P > dist\README.txt
- cmd: 7z a lc0-windows-%NAME%.zip .\dist\README.txt .\dist\COPYING .\dist\CUDA.txt .\dist\CUDNN.txt
artifacts:
  - path: build/lc0.exe
    name: lc0-$(NAME)
  - path: lc0-windows-$(NAME).zip
    name: lc0-windows-$(NAME)-zip
deploy:
  - provider: GitHub
    artifact: lc0-windows-$(NAME).zip
    auth_token:
      secure: gaVZ2vFMBN/OhJzoWLKyfi6v4RpfuHn/M1F9+Id1SucKTEpO8fudn+Xcd2kfOBRz